services:
  nats:
    image: nats:2.10-alpine
    container_name: nats
    ports:
      - '4222:4222' # Client connections
      - '8222:8222' # HTTP monitoring
      - '6222:6222' # Cluster connections (if needed)
    command: [
        '-p',
        '4222', # Port
        '-m',
        '52428800', # 50MB max payload
        '-http_port',
        '8222', # HTTP monitoring port
        '-T', # Add timestamps to logs
        '-l',
        '/var/log/nats.log', # Log file
      ]
    volumes:
      - nats-data:/data
      - nats-logs:/var/log
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:8222/healthz',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - '6379:6379'
    command: [
        'redis-server',
        '--appendonly',
        'yes', # Enable persistence
        '--maxmemory',
        '256mb', # Set max memory
        '--maxmemory-policy',
        'allkeys-lru', # Eviction policy
      ]
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    image: trip-sync/api-gateway:latest
    container_name: api-gateway
    ports:
      - '80:80'
      - '443:443' # HTTPS port if needed
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - NATS_MAX_PAYLOAD=52428800 # Ensure client knows about increased limit
      - NATS_SERVER=nats://nats:4222 # Override to use container name
      - REDIS_HOST=redis # Override to use container name
    depends_on:
      nats:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:80/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

volumes:
  nats-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker-volume/nats-data
  nats-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker-volume/nats-logs
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker-volume/redis-data

networks:
  default:
    name: trip-sync-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
